# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH
export PATH="$HOME/.local/bin:$PATH"

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"
export PATH="$HOME/.npm-global/bin:$PATH"
export R2MOD_INSTALL_DIR="$HOME/steam/.local/share/Steam/steamapps/common/Risk of Rain 2/"
export R2MOD_COMPAT_DIR="$HOME/steam/.local/share/Steam/steamapps/compatdata/632360"

export EDITOR="/usr/bin/nvim"
export VISUAL="nvim"
# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
#ZSH_THEME="jnrowe"
#ZSH_THEME="headline"
ZSH_THEME=""
fpath+=$HOME/Documents/typewritten
fpath+=$HOME/.config/zsh
autoload -Uz async && async
autoload -U promptinit; promptinit
prompt typewritten
export TYPEWRITTEN_PROMPT_LAYOUT="half_pure"
export TYPEWRITTEN_RELATIVE_PATH="git"
export TYPEWRITTEN_COLOR_MAPPINGS="primary:yellow"
# export TYPEWRITTEN_LEFT_PROMPT_PREFIX_FUNCTION=(date +%H:%M)
# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
    git
    zsh-autosuggestions
    fast-syntax-highlighting
    rust
    nvm
)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
    export EDITOR='vim'
else
    export EDITOR='nvim'
fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"
#
#
# Adding LS COLORS VARIABLE
# export LS_COLORS="$(vivid generate solarized-dark)"

ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#67828c,bold,underline"


#Adding Doom Emacs to PATH
export PATH="$HOME/.emacs.d/bin:$PATH"
[ -f "/home/jab/.ghcup/env" ] && source "/home/jab/.ghcup/env" # ghcup-env

# Adding XDG compliance
export XDG_DATA_HOME=$HOME/.local/share
export XDG_CONFIG_HOME=$HOME/.config
export XDG_STATE_HOME=$HOME/.local/state
export XDG_CACHE_HOME=$HOME/.cache
#export CARGO_HOME="$XDG_DATA_HOME"/cargo
#export CUDA_CACHE_PATH="$XDG_CACHE_HOME"/nv
#export GNUPGHOME="$XDG_DATA_HOME"/gnupg
#export GTK2_RC_FILES="$XDG_CONFIG_HOME"/gtk-2.0/gtkrc
#export XCURSOR_PATH=/usr/share/icons:${XDG_DATA_HOME}/icons
#export LESSHISTFILE="$XDG_CACHE_HOME"/less/history
#export NODE_REPL_HISTORY="$XDG_DATA_HOME"/node_repl_history
#alias nvidia-settings --config="$XDG_CONFIG_HOME"/nvidia/settings
#export _JAVA_OPTIONS=-Djava.util.prefs.userRoot="$XDG_CONFIG_HOME"/java
#
# GPG shenanigans
export GPG_TTY=$(tty)


# Add cargo/bin to PATH
export PATH="$HOME/.cargo/bin:$PATH"

if [[ "${TERM}" != "" && "${TERM}" == "kitty" ]]
then
    precmd()
    {
        # output on which level (%L) this shell is running on.
        # append the current directory (%~), substitute home directories with a tilde.
        # "\a" bell (man 1 echo)
        # "print" must be used here; echo cannot handle prompt expansions (%L)
        print -Pn "\e]0;$(id --user --name)@$(hostname): zsh[%L] %~\a"
    }

    preexec()
    {
        # output current executed command with parameters
        echo -en "\e]0;$(id --user --name)@$(hostname): ${1}\a"
    }
fi

function 0x0.st () {
    local CMD="curl -F'file=@-' https://0x0.st"
    if [ ! -t 0 ]; then
        cat | eval $CMD
    else
        for i in "$@"; do
            cat "$i"
        done | eval $CMD
    fi
}

export BAT_THEME="Solarized (dark)"



alias ls="exa --numeric --octal-permissions --git --group --icons"
alias l="exa --all --long --numeric --octal-permissions --git --group --icons"
alias cat="bat"
alias v="nvim"
alias c="clear"
alias hi="systemctl hibernate"
alias nitch="cd ~/Documents/nitch/ && ./nitch && cd -"
alias sx="startx"
alias irc="ssh server -t tmux -L weechat attach"
alias server="ssh server -t tmux -L minecraft attach"
alias kitsune="cd ~/repos/kitsune/"
[ "$TERM" = "xterm-kitty" ] && alias ssh="kitty +kitten ssh"
cd
unsetopt BEEP
