#!/bin/bash
#
# monitors=/tmp/hypr/monitors_temp
# hyprctl monitors > $monitors
#
# if [[ -z $1 ]]; then
#   workspace=$(grep -B 4 "focused: no" "$monitors" | awk 'NR==1 {print $3}')
# else
#   workspace=$1
# fi
#
#
# activemonitor=$(grep -B 10 "focused: yes" "$monitors" | awk 'NR==1 {print $2}')
# passivemonitor=$(grep  -B 10 "focused: no" "$monitors" | awk 'NR==1 {print $2}')
# #activews=$(grep -A 2 "$activemonitor" "$monitors" | awk 'NR==3 {print $1}' RS='(' FS=')')
# passivews=$(grep -A 5 "$passivemonitor" "$monitors" | awk 'NR==7 {print $3}')
# echo $passivews
# # echo $workspace
#
# if [[ $workspace -eq $passivews ]] && [[ $activemonitor != "$passivemonitor" ]]; then
#   hyprctl dispatch swapactiveworkspaces "$activemonitor" "$passivemonitor"
#   echo a
# elif [[ $workspace -eq $passivews ]]; then
#     hyprctl swapactiveworkspaces "$activemonitor" "$passivemonitor"
#     echo c
# else
#   hyprctl dispatch moveworkspacetomonitor "$workspace $activemonitor" && hyprctl dispatch workspace "$workspace"
#   echo b
# fi
#
# exit 0
#
WORKSPACE="$1"

monitors_out="$(hyprctl monitors -j)"
focused_mon="$(echo "$monitors_out" | jq '.[] | select(.focused==true) | .id')"
focused_wks="$(echo "$monitors_out" | jq '.[].activeWorkspace.id')"

# Workspace is already focused, check on which monitor
if echo "$focused_wks" | grep "$WORKSPACE" >/dev/null; then
  mon_id="$(echo "$monitors_out" | jq ".[] | select(.activeWorkspace.id==$WORKSPACE) | .id")"

  # If the workspace is focused on the active monitor, don't do anything (we're here).
  # Otherwise, swap the workspaces.
  if [ "$mon_id" -ne "$focused_mon" ]; then
    hyprctl dispatch swapactiveworkspaces "$focused_mon" "$mon_id"
  fi
# Switching to an unfocused workspace, always move it to focused monitor
else
  hyprctl dispatch moveworkspacetomonitor "$WORKSPACE" "$focused_mon"
  hyprctl dispatch workspace "$WORKSPACE"
fi
